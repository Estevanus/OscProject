import bge
import var
#from json import loads as muat
from mathutils import Vector as vektor, Euler as eul
import gameobjects
import ai
from weapons import setWeapons
import HUD
import checker

mouse_is_shown = True

spawnPoints = "spawnPoints.json"


def cekKamus(cont):
	own = cont.owner
	kamus = var.globalDict
	
	if 'cekKamus' not in own:
		own['cekKamus'] = "checked"
		print(kamus)
		

def mutate(own, tipe="vehicle"):
	old_object = own
	
	if tipe == 'vehicle':
		mutated_object = gameobjects.KX_VehicleObject(own)
		# After calling the constructor above, references to the old object
		# should not be used.
		assert(old_object is not mutated_object)
		assert(old_object.invalid)
		assert(mutated_object is own)
		
def subMunculkan(cont):
	own = cont.owner
	print('\nend of spawning object')
	print("..........................................")
	own['endAdding'] = None
	#for i in dir(HUD): print(i)
	HUD.addHUD()
	#print(scene.objects)
	#print(bge.logic.getSceneList())
	#cekKamus(cont)
	var.status = 'loadgameobject'
	#obj.addLookAt()
	own.endObject()

def deklarasi(cont):
	if cont.sensors['Always'].positive:
		scene = bge.logic.getCurrentScene()
		
		if 'bots' not in var.scene:
			var.scene['bots'] = []
		
		kamus = var.globalDict
		own = cont.owner
		
		'''
		#telah dipindahkan ke script openmap.py
		map = kamus['map'].split('.')
		map = map[0]
		
		thislok = bge.logic.expandPath('//')
		own['Nama Map'] = str(map)
		
		if 'mapKonfigurasi' not in own:
			mc = thislok + "maps\\" + own['Nama Map'] + "\\mapConfigurasi.json"
			own['mapKonfigurasi'] = True
			var.mapKonfigurasi = muat(open(mc).read())
			#var,mapKonfigurasi['jari2'] = var.mapKonfigurasi['dimensi']/2
			print(var.mapKonfigurasi)
			initializeMap()
			#posisi_unit_di_minimap = posisi_unit / jari2_map * jari2_minimap
		'''
		'''
		if 'getSpawnLocations' not in own:
			spl = thislok + "maps\\" + own['Nama Map'] + "\\spawnPoints.json"
			var.spawnLocations = muat(open(spl).read())
			own['getSpawnLocations'] = muat(open(spl).read())
			print(var.spawnLocations)
		'''
		
		#spawnCommanderController(cont, 1)
		#spawnCommanderController(cont, 2)
		scene.addObject('commanderControllerObject')
		spawnBotControllerObject(cont)
		for i in cont.actuators:
			cont.activate(i)
			
def setObjective(cont):
	own = cont.owner
	if 'type' in own:
		if own['type'] == "captureable":
			newone = gameobjects.KX_ControlPoints(cont.owner)
			var.controlPoints[newone.defBy].append(newone)
			cont.activate(cont.actuators['s2'])
	

def spawnCommanderController(cont, team=1):
	scene = bge.logic.getCurrentScene()
	added = scene.addObject('commanderControllerObject')
	added = gameobjects.KX_Commander(added)
	added.team = team
def spawnBotControllerObject(cont):
	print("assigning team for bots... with object " + cont.owner.name)
	botAssigning = var.mapKonfigurasi['botAssigning']
	scene = bge.logic.getCurrentScene()
	a = botAssigning[0]
	b = botAssigning[1]
	print("there's {0} bot/bots in team A".format(a))
	print("there's {0} bot/bots in team B".format(b))
	for i in range(botAssigning[0]):
		bot = scene.addObject('botControllerObject')
		bot = ai.KX_BotVehicleController(bot)
		var.scene['bots'].append(bot)
		bot.team = 1
		var.NPCList[1].append(bot)
	for i in range(botAssigning[1]):
		bot = scene.addObject('botControllerObject')
		bot = ai.KX_BotVehicleController(bot)
		var.scene['bots'].append(bot)
		bot.team = 2
		var.NPCList[2].append(bot)
	
def firstSpawnBot(cont):
	own = cont.owner
	if own['firstSpawn'] == True:
		#print("spawn disini tuh bot")
		for i in var.scene['bots']:
			i.isAllowToSpawn = True
			pass
		own['firstSpawn'] = False
	pass
	
def checkLocSpawner():
	spawns = []
	for i in var.spawnLocByTeam:
		for j in i:
			if i.invalid == False:
				spawns.append(j)
	return spawns
	
def botSpawningAllocator(cont):
	#seharusnya berfungsi sebagai pengecek jika di tempat spawn bot ada objek lain
	
	#karena ini masih for tahap vehicle dan belum dengan tahap objek orang maka pake yg simple dulu
	if len(var.botAntrianForSpawn) > 0:
		own = cont.owner
		for i in var.botAntrianForSpawn:
			#memunculkan objek bot
			#seharusnya mengikuti algoritma sebagai berikut
			#mengecek tim
			tim = i.team
			#mengspawnnya di spawn point sesuai yg dimiliki oleh tim nya
			#mengecek available spawn point
			lokForSpawn = checkLocSpawner()
			for j in lokForSpawn:
				if tim == j['tim']:
					#i.isAllowToSpawn = True
					scene = bge.logic.getCurrentScene()
					added = scene.addObject(var.botPCO[tim-1])
					added = gameobjects.KX_VehicleObject(added)
					added.position = j.position
					added.worldOrientation = j.worldOrientation
					i.gameObjects = added
					added.driveBy = i
					#untuk sementara pake 1 spawn point jo dulu
					break
			#ketika selesai di add maka perlu dihapus
			print("checking if there's no second break to this bot spawner")
			del var.botAntrianForSpawn[var.botAntrianForSpawn.index(i)]